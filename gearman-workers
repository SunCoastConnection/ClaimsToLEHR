#!/usr/bin/env php
<?php

namespace SunCoastConnection\ClaimsToOEMR;

// Gearman Worker Jobs

use \Kicken\Gearman\Worker;
use \Kicken\Gearman\Job\WorkerJob;
use \SunCoastConnection\ClaimsToOEMR\Document\Options;
use \SunCoastConnection\ClaimsToOEMR\Gearman\Job\ImportClaims;
use \SunCoastConnection\ClaimsToOEMR\Gearman\Job\RegisterRemoteConnection;

//** LOAD AUTOLOADER **//
require_once(__DIR__.'/vendor/autoload.php');

// Load Configurations
$options = Options::getInstance(require_once(__DIR__.'/config/gearman-worker.php'));

// Setup Gearman connection to servers
$worker = new Worker(
	$options->get('Gearman.servers', '127.0.0.1:4730')
);

// Register worker RegisterRemoteConnection
$worker->registerFunction('registerRemoteConnection',
	function(WorkerJob $job) use ($options) {
		$workerJob = RegisterRemoteConnection::getInstance($options);

		$log = [];

		$returnValue = $workerJob->run($job, $log);

		if(count($log)) {
			echo "Error:\t".implode(PHP_EOL."Error:\t", $log).PHP_EOL;
		}

		return $returnValue;
	}
);

// Register worker ReturnRemoteConnection
$worker->registerFunction('returnRemoteConnection',
	function(WorkerJob $job) use ($options) {
		$workerJob = ReturnRemoteConnection::getInstance($options);

		$log = [];

		$returnValue = $workerJob->run($job, $log);

		if(count($log)) {
			echo "Error:\t".implode(PHP_EOL."Error:\t", $log).PHP_EOL;
		}

		return $returnValue;
	}
);

// Register worker ImportClaims
$worker->registerFunction('importClaims',
	function(WorkerJob $job) use ($options) {
		$workerJob = ImportClaims::getInstance($options);

		$log = [];

		$returnValue = $workerJob->run($job, $log);

		if(count($log)) {
			echo "Error:\t".implode(PHP_EOL."Error:\t", $log).PHP_EOL;
		}

		return $returnValue;
	}
);

$worker->work();